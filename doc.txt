https://caml.inria.fr/pub/docs/manual-ocaml/lexyacc.html
ocamllex lexer.mll       # generates lexer.ml
ocamlyacc parser.mly     # generates parser.ml and parser.mli
ocamlc -c pi.ml
ocamlc -c parser.mli
ocamlc -c lexer.ml
ocamlc -c parser.ml
ocamlc -c util.ml
ocamlc -c main.ml
ocamlc -o main util.cmo lexer.cmo parser.cmo main.cmo





http://fsl.cs.illinois.edu/images/0/0d/CS522-Spring-2011-PL-book-imp.pdf
BNF de Imp


ocamlc -c calc.ml
ocamlc -o calc lexer.cmo parser.cmo calc.cmo

Gerar analise lexica e sintatica
procurar o outro documento que tem exemplos mais avancados como if e while

usage:
    run:
        make
        ./main -f {FileName}
    Clear:
        make clear

#com organizaco em pastas (A trabalhar)
ocamllex -o bin/lexer.ml lexer.mll
ocamlyacc -b bin/parser parser.mly
ocamlc -o bin/parser.cmi -c bin/parser.mli


ocamllex lexer.mll
10 states, 267 transitions, table size 1128 bytes
ocamlyacc parser.mly
ocamldep *.mli *.ml > .depend
ocamlc -c pi.ml
ocamlc -c util.ml
ocamlc -c parser.mli
ocamlc -c lexer.ml
ocamlc -c parser.ml
ocamlc -c main.ml
ocamlc util.cmo pi.cmo lexer.cmo parser.cmo   main.cmo -o ocampiler

instalacao:
add-apt-repository ppa:avsm/ppa
apt update
apt install opam
sudo apt install ocaml
opam init
eval `opam env`
opam switch create 4.06.1
eval `opam env`

- conferir se ocamlc, ocamllex e ocamlyacc estao instalados


//definindo pilha de inteiros
let exmeplo = new int stack

//definindo uma pilha de expressoes
let controle = new expression stack